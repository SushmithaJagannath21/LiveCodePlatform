{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\nexport const strictEquals = (a, b) => a === b;\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals(itemEquals = strictEquals) {\n  return (a, b) => arrays.equals(a, b, itemEquals);\n}\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals() {\n  return (a, b) => a.equals(b);\n}\nexport function equalsIfDefined(v1, v2, equals) {\n  if (!v1 || !v2) {\n    return v1 === v2;\n  }\n  return equals(v1, v2);\n}\nconst objIds = new WeakMap();","map":{"version":3,"names":["arrays","strictEquals","a","b","itemsEquals","itemEquals","equals","equalsIfDefined","v1","v2","objIds","WeakMap"],"sources":["/Users/sushmithajagannath/collaborative-code-editor/node_modules/monaco-editor/esm/vs/base/common/equals.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from './arrays.js';\nexport const strictEquals = (a, b) => a === b;\n/**\n * Checks if the items of two arrays are equal.\n * By default, strict equality is used to compare elements, but a custom equality comparer can be provided.\n */\nexport function itemsEquals(itemEquals = strictEquals) {\n    return (a, b) => arrays.equals(a, b, itemEquals);\n}\n/**\n * Uses `item.equals(other)` to determine equality.\n */\nexport function itemEquals() {\n    return (a, b) => a.equals(b);\n}\nexport function equalsIfDefined(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nconst objIds = new WeakMap();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAM,MAAM,aAAa;AACrC,OAAO,MAAMC,YAAY,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,KAAKC,CAAC;AAC7C;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,UAAU,GAAGJ,YAAY,EAAE;EACnD,OAAO,CAACC,CAAC,EAAEC,CAAC,KAAKH,MAAM,CAACM,MAAM,CAACJ,CAAC,EAAEC,CAAC,EAAEE,UAAU,CAAC;AACpD;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAUA,CAAA,EAAG;EACzB,OAAO,CAACH,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACI,MAAM,CAACH,CAAC,CAAC;AAChC;AACA,OAAO,SAASI,eAAeA,CAACC,EAAE,EAAEC,EAAE,EAAEH,MAAM,EAAE;EAC5C,IAAI,CAACE,EAAE,IAAI,CAACC,EAAE,EAAE;IACZ,OAAOD,EAAE,KAAKC,EAAE;EACpB;EACA,OAAOH,MAAM,CAACE,EAAE,EAAEC,EAAE,CAAC;AACzB;AACA,MAAMC,MAAM,GAAG,IAAIC,OAAO,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}