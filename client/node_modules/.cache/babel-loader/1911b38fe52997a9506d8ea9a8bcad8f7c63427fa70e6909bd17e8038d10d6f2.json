{"ast":null,"code":"/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n  return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n  return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n  return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n// color registry\nexport const Extensions = {\n  ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n  constructor() {\n    this._onDidChangeSchema = new Emitter();\n    this.onDidChangeSchema = this._onDidChangeSchema.event;\n    this.colorSchema = {\n      type: 'object',\n      properties: {}\n    };\n    this.colorReferenceSchema = {\n      type: 'string',\n      enum: [],\n      enumDescriptions: []\n    };\n    this.colorsById = {};\n  }\n  registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n    const colorContribution = {\n      id,\n      description,\n      defaults,\n      needsTransparency,\n      deprecationMessage\n    };\n    this.colorsById[id] = colorContribution;\n    const propertySchema = {\n      type: 'string',\n      description,\n      format: 'color-hex',\n      defaultSnippets: [{\n        body: '${1:#ff0000}'\n      }]\n    };\n    if (deprecationMessage) {\n      propertySchema.deprecationMessage = deprecationMessage;\n    }\n    if (needsTransparency) {\n      propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n      propertySchema.patternErrorMessage = 'This color must be transparent or it will obscure content';\n    }\n    this.colorSchema.properties[id] = propertySchema;\n    this.colorReferenceSchema.enum.push(id);\n    this.colorReferenceSchema.enumDescriptions.push(description);\n    this._onDidChangeSchema.fire();\n    return id;\n  }\n  getColors() {\n    return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n  }\n  resolveDefaultColor(id, theme) {\n    const colorDesc = this.colorsById[id];\n    if (colorDesc && colorDesc.defaults) {\n      const colorValue = colorDesc.defaults[theme.type];\n      return resolveColorValue(colorValue, theme);\n    }\n    return undefined;\n  }\n  getColorSchema() {\n    return this.colorSchema;\n  }\n  toString() {\n    const sorter = (a, b) => {\n      const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n      const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n      if (cat1 !== cat2) {\n        return cat1 - cat2;\n      }\n      return a.localeCompare(b);\n    };\n    return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n  }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n  return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n  var _a, _b, _c, _d;\n  switch (transform.op) {\n    case 0 /* ColorTransformType.Darken */:\n      return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n    case 1 /* ColorTransformType.Lighten */:\n      return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n    case 2 /* ColorTransformType.Transparent */:\n      return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n    case 3 /* ColorTransformType.Opaque */:\n      {\n        const backgroundColor = resolveColorValue(transform.background, theme);\n        if (!backgroundColor) {\n          return resolveColorValue(transform.value, theme);\n        }\n        return (_d = resolveColorValue(transform.value, theme)) === null || _d === void 0 ? void 0 : _d.makeOpaque(backgroundColor);\n      }\n    case 4 /* ColorTransformType.OneOf */:\n      for (const candidate of transform.values) {\n        const color = resolveColorValue(candidate, theme);\n        if (color) {\n          return color;\n        }\n      }\n      return undefined;\n    case 6 /* ColorTransformType.IfDefinedThenElse */:\n      return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n    case 5 /* ColorTransformType.LessProminent */:\n      {\n        const from = resolveColorValue(transform.value, theme);\n        if (!from) {\n          return undefined;\n        }\n        const backgroundColor = resolveColorValue(transform.background, theme);\n        if (!backgroundColor) {\n          return from.transparent(transform.factor * transform.transparency);\n        }\n        return from.isDarkerThan(backgroundColor) ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency) : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n      }\n    default:\n      throw assertNever(transform);\n  }\n}\nexport function darken(colorValue, factor) {\n  return {\n    op: 0 /* ColorTransformType.Darken */,\n    value: colorValue,\n    factor\n  };\n}\nexport function lighten(colorValue, factor) {\n  return {\n    op: 1 /* ColorTransformType.Lighten */,\n    value: colorValue,\n    factor\n  };\n}\nexport function transparent(colorValue, factor) {\n  return {\n    op: 2 /* ColorTransformType.Transparent */,\n    value: colorValue,\n    factor\n  };\n}\nexport function oneOf(...colorValues) {\n  return {\n    op: 4 /* ColorTransformType.OneOf */,\n    values: colorValues\n  };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n  return {\n    op: 6 /* ColorTransformType.IfDefinedThenElse */,\n    if: ifArg,\n    then: thenArg,\n    else: elseArg\n  };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n  return {\n    op: 5 /* ColorTransformType.LessProminent */,\n    value: colorValue,\n    background: backgroundColorValue,\n    factor,\n    transparency\n  };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n  if (colorValue === null) {\n    return undefined;\n  } else if (typeof colorValue === 'string') {\n    if (colorValue[0] === '#') {\n      return Color.fromHex(colorValue);\n    }\n    return theme.getColor(colorValue);\n  } else if (colorValue instanceof Color) {\n    return colorValue;\n  } else if (typeof colorValue === 'object') {\n    return executeTransform(colorValue, theme);\n  }\n  return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n  if (!delayer.isScheduled()) {\n    delayer.schedule();\n  }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);","map":{"version":3,"names":["assertNever","RunOnceScheduler","Color","Emitter","Extensions","JSONExtensions","platform","asCssVariableName","colorIdent","replace","asCssVariable","color","asCssVariableWithDefault","defaultCssValue","ColorContribution","ColorRegistry","constructor","_onDidChangeSchema","onDidChangeSchema","event","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","registerColor","id","defaults","description","needsTransparency","deprecationMessage","colorContribution","propertySchema","format","defaultSnippets","body","pattern","patternErrorMessage","push","fire","getColors","Object","keys","map","resolveDefaultColor","theme","colorDesc","colorValue","resolveColorValue","undefined","getColorSchema","toString","sorter","a","b","cat1","indexOf","cat2","localeCompare","sort","k","join","colorRegistry","Registry","add","executeTransform","transform","_a","_b","_c","_d","op","value","darken","factor","lighten","transparent","backgroundColor","background","makeOpaque","candidate","values","defines","if","then","else","from","transparency","isDarkerThan","getLighterColor","getDarkerColor","oneOf","colorValues","ifDefinedThenElse","ifArg","thenArg","elseArg","lessProminent","backgroundColorValue","fromHex","getColor","workbenchColorsSchemaId","schemaRegistry","as","JSONContribution","registerSchema","delayer","notifySchemaChanged","isScheduled","schedule"],"sources":["/Users/sushmithajagannath/collaborative-code-editor/node_modules/monaco-editor/esm/vs/platform/theme/common/colorUtils.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertNever } from '../../../base/common/assert.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (needsTransparency) {\n            propertySchema.pattern = '^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$';\n            propertySchema.patternErrorMessage = 'This color must be transparent or it will obscure content';\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c, _d;\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return (_d = resolveColorValue(transform.value, theme)) === null || _d === void 0 ? void 0 : _d.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nexport function lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}